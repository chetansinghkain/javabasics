//print the largest of two numbers
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {
		int a=12;
		int b=24;
		if(a>=b) {
			System.out.println("largest is a");
		}
		else {
			System.out.println("largest is b");
		}
	}
}
//print if a number from user is odd or even.
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int number=sc.nextInt();
		if(number%2==0) {
			System.out.println("even");
		}
		else {
			System.out.println("odd");
		}
		
	}
}
//INCOME TAX CALCULATOR:
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int income=sc.nextInt();
		int tax;
		if (income<500000) {
			tax=0;
		}
		else if(income>=500000 && income<=1000000) {
			tax=(int)(income*0.2);
		}
		else {
			tax=(int)(income*0.3);
		}
		System.out.println("your tax is:"+tax);
		
		
	}
}
//PRINT THE LARGEST OF THREE.
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {
		int a=10,b=44,c=9;
		if((a>=b)&&(a>=c)) {
			System.out.println("largest is a");
		}
		else if ((b>=c)&&(b>=a)) {
			System.out.println("largest is b");
		}
		else {
			System.out.println("largest is c");
		}
		
		
		
	}
}

//CHECK IF A STUDENT IS PASS OR FAIL using ternary operator.
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {
		int marks=65;
		String reportcard=marks>=33?"pass":"fail";
		System.out.println(reportcard);
		
		
		
		
	}
}
//CALCULATOR USING SWITCH (+-*/%)
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner(System.in);
		System.out.print("enter a :");
		int a= sc.nextInt();
		System.out.print("enter b :");
		int b =sc.nextInt();
		System.out.print("enter operator :");
		char operator=sc.next().charAt(0);
		switch(operator) {
	   case '+': System.out.println(a+b);
	   break;
	   case '-': System.out.println(a-b);
	   break;
	   case '*': System.out.println(a*b);
	   break;
	   case'/':System.out.println(a/b);
	   break;
	   case'%':System.out.println(a%b);
	   break;
	   default : System.out.println("wrong operator");
	   
	   
	   
		    
		}
		
		   
	}
}

//PRINT HELLOWORLD 100 TIMES;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		int counter=0;
		while(counter<100) {
		System.out.println("HELLOWORLD");
		counter++;
		}
		System.out.print("printed HW 100x");
		
		   
	}
}

//PRINT NUMBER FROM 1 TO n;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner(System.in);
		int n =sc.nextInt();
		int counter =1;
		while(counter<=n) {
		System.out.println(counter+"");
		counter++;
		}
		System.out.println();
		
	}
		
		
		
}

//PRINT SUM OF FIRST n NATURAL NUMBER;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner(System.in);
		int n =sc.nextInt();
		int sum=0;
		int i=1;
		while(i<=n) {
			System.out.println(i);
		sum+=i;
		i++;
		}
		System.out.println("sum is : "+sum);
		
	}
		
		
		
}

//PRINT HELLOWORLD 10 TIMES WITH FOR LOOP;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		for(int i=1; i<=10; i++) {
			System.out.println("HELLOWORLD");
		}
		}
		
	}
		
//PRINT SQUARE PATTERN;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		for(int line=1; line<=5; line++) {
			System.out.println("*****");
		}
		}
		
	}
		
//PRINT REVERSE OF A NUMBER;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		int n = 10899;
		while (n>0) {
			int Lastdigit =n%10;
			System.out.print(Lastdigit);
			n=n/10;
		}
	}
		
}

//PRINT  HELLOWORLD 10 TIMES BY DO-WHILE LOOP;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		int counter=1;
		do {
			System.out.println("HELLOWORLD");
		    counter++;
		}
		while(counter<=10);
	}
}		
		
		
		


/*PRINT  KEEP ENTERING NUMBERS TILL USER ENTERS A MULTIPLE 
 * OF 10;
 */
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner (System.in);
		do {
			System.out.println("enter your number :");
			int n=sc.nextInt();
			if(n%10==0) {
			break;
		    }
		System.out.println(n);
	   }while(true);

//DISPLAY ALL NUMBERS ENTERED BY THE USER EXCEPT MULTIPLE OF 10;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner(System.in);
		do {
			System.out.println("enter your number : ");
			int n=sc.nextInt();
			if(n%10==0) {
				continue;
				
			}
		System.out.println("number was:"+n);
		}
		while(true);
		
		
	}
}		
		
		
		


//CHECK IF A NUMBER IS PRIME OR NOT;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    if(n==2) {
	    System.out.println("n is prime");
	    }else {
	    	boolean  isprime=true;
	    	for(int i=2; i<=Math.sqrt(n);i++) {
	    		if (n%i==0) {
	    			isprime =false;
	    		}
	    	}
	    	if(isprime==true) {
	    		System.out.println("n is prime");
	    	}else {
	    		System.out.println("n is not prime");
	    	}
	    		}
	    	
		
	}
}		
//WRITE A PROGRAM THAT READS A SET OF INTEGERS , AND THEN PRINTS THE SUM OF THE EVEN AND ODD INTEGERS;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner(System.in);
	   int number;
	   int choice;
	   int evensum=0;
	   int oddsum=0;
	   do {
		   System.out.println("enter the number : ");
		   number=sc.nextInt();
		   if(number%2==0) {
			   evensum+=number;
		   }else {
			   oddsum+=number;
		    }
		   System.out.println("Do you want to continue?press 1 for yes or 0 for no");
		   choice=sc.nextInt();
	  }
	   while(choice==1) ;
		   System.out.println("sum of even number:" + evensum);
		   System.out.println("sum of odd number:" +oddsum);   
 }
		
	
}	
//WRITE A PROGRAM TO FIND THE FACTORIAL OF ANY NUMBER ENTERED BY THE USER;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner(System.in);
	   int number;
	   int factorial=1;
	   System.out.println("eneter any positive number:");
	   number=sc.nextInt();
	   for(int i=1; i<=number; i++) {
		   factorial*=i;
	   }
	   System.out.println("factorial:"+factorial);
	   }
	 
}		
		
		
		


//WRITE A PROGRAM TO FIND THE multiplication table OF ANY NUMBER ENTERED BY THE USER;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		Scanner sc=new Scanner(System.in);
	   System.out.println("enter any number:");
	   int n=sc.nextInt();
	   for(int i=1; i<=10; i++) {
		   System.out.println(n*i);
	   }
	 
	  }
	
	 
}
//WRITE A PROGRAM TO PRINT THE STAR PATTERN;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		for (int line=1; line<=4; line++) {
			for(int star=1; star<=line; star++){
				System.out.print("*");
			}
			System.out.println();
		}
		
	 
    }
	
	 
}		
//WRITE A PROGRAM TO PRINT THE INVERTED STAR PATTERN;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		int n=4;
		for (int line=1; line<=n; line++) {
			for(int star=1; star<=n-line+1; star++){
				System.out.print("*");
			}
			System.out.println();
		}
		
	 
    }
	
	 
}		
//WRITE A PROGRAM TO PRINT THE HALF - PYRAMID PATTERN;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		int n=4;
		for (int line=1; line<=n; line++) {
			for(int number=1;number<=line; number++){
				System.out.print(number);
			}
			System.out.println();
		}
		
	 
    }
	
	 
}		
//WRITE A PROGRAM TO PRINT THE CHARACTER PATTERN;
package Userfile;
import java.util.*;

public class input {

	public static void main(String[] args) {  
		int n=4;
		char ch='A';
		for (int line=1; line<=n; line++) {
			for(int chars=1;chars<=line; chars++){
				System.out.print(ch);
				ch++;
			}
			System.out.println();
		}
		
	 
    }
	
	 
}		
		
//WRITE A PROGRAM TO PRINT THE SUM OF TWO NUMBER USING THE FUNCTION METHOD;
package Userfile;
import java.util.*;


public class input {

	public static int calculatesum(int num1,int num2) {
		int sum=num1+num2;
		return sum;
		
	}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int a=sc.nextInt();
		int b=sc.nextInt();
		int sum=calculatesum(a,b);
		System.out.println("sum is"+sum);
	}
	
	 
}		
//WRITE A PROGRAM TO PRINT THE SWAP THE TWO VALUES;
package Userfile;
import java.util.*;


public class input {

	public static void swap (int a,int b){
		int temp=a;
		a=b;
		b=temp;
		System.out.println("a="+a);
		System.out.println("b="+b);
	}
	public static void main (String args[]) {
		int a=5;
		int b=3;
		swap(a,b);
		
	}
		
	
	 
}		
//WRITE A PROGRAM TO PRINT THE PRODUCT THE TWO VALUES;
package Userfile;
import java.util.*;


public class input {

	public static int product (int a,int b){
		int product=a*b;
		return product;
	}
	public static void main (String args[]) {
		int a=5;
		int b=6;
		int product=product(a,b);
		System.out.println(product);
		
	}
		
	
	 
}		
//WRITE A PROGRAM TO PRINT THE FACTORIAL OF A NUMBER;
package Userfile;
import java.util.*;


public class input {

	public static int Factorial (int n){
		int f=1;
		for (int i=1; i<=n; i++) {
			f=f*i;
		}
		return f;
	}
	public static void main (String args[]) {
		System.out.println(Factorial(5));
		
	}
		
	
	 
}		
//WRITE A PROGRAM TOPRINT THE BINOMIAL COEFFICIENT OF A NUMBER;
package Userfile;
import java.util.*;


public class input {
	public static int factorial(int n){
		int f=1;
		for (int i=1; i<=n; i++) {
			f=f*i;
		}
		return f;
	}
	public static int bincoeff(int n,int r) {
		int fact_n=factorial(n);
		int fact_r=factorial(r);
		int fact_nmr=factorial(n-r);
		int bincoeff=fact_n/(fact_r*fact_nmr);
		return bincoeff;
	}
	public static void main (String args[]) {
		System.out.println(bincoeff(5,2));
		
	}
		
	
	 
}
//WRITE A PROGRAM OF FUNCTION OVERLOADING USING PARAMETERS;(iske andar parameters change hote h)
package Userfile;
import java.util.*;


public class input {
   //function to calculate the sum of two numbers;
	public static int sum (int a,int b) {
	    return a+b;
    }
//function to calculate the sum of three numbers;
	public static int sum(int a,int b,int c) {
		return a+b+c;
	}
	public static void main (String args[]) {
		System.out.println(sum(5,6));
		System.out.println(sum(6,3,4));
	}
		
	
	 
}		
//WRITE A PROGRAM OF FUNCTION OVERLOADING USING DATATYPES;(isme only datatypes change hote h);
package Userfile;
import java.util.*;


public class input {
   //function to calculate int sum of two numbers;
	public static int sum (int a,int b) {
	    return a+b;
    }
//function to calculate the float sum of three numbers;
	public static float sum(float a,float b) {
		return a+b;
	}
	public static void main (String args[]) {
		System.out.println(sum(5,6));
		System.out.println(sum(6.2f,3.4f));
	}
		
	
	 
}
//WRITE A PROGRAM TO CHECK IF A NUMBER IS PRIME OR NOT;
package javabasics;

public class Javabasics {

	public static boolean isprime(int n) {
		for (int i=2; i<=n-1; i++) {
			if (n%i==0) {
				return false;
			}
		}
		return true;
    }
	public static void main(String[] args) {
		System.out.println(isprime(4));
	}
}
//WRITE A PROGRAM TO CHECK IF A NUMBER IS PRIME OR NOT (OPTIMIZATION);
package javabasics;

public class Javabasics {

	public static boolean isprime(int n) {
		for (int i=2; i<=Math.sqrt(n); i++) {
			if (n%i==0) {
				return false;
			}
		}
		return true;
    }
	public static void main(String[] args) {
		System.out.println(isprime(104729));
	}
}

//WRITE A PROGRAM TO PRINT ALL PRIME NUMBERS IN RANGE ;
package javabasics;

public class Javabasics {
	public static boolean isprime(int n) {
		for (int i=2; i<=Math.sqrt(n); i++) {
			if (n%i==0) {
				return false;
			}
		}
		return true;
    }
	public static void PrimesInRange(int n) {
		for (int i=2; i<=n;i++) {
			if (isprime(i)) {
				System.out.print(i+ " ");
			}
		}
	}
	public static void main(String[] args) {
		PrimesInRange(1000);
	}
}
//WRITE A PROGRAM TO CONVERT FROM BINARY TO DECIMAL;
package javabasics;

public class Javabasics {
	public static void BinToDec(int binnum) {
		int mynum=binnum;
		int pow=0;
		int decnum=0;
		while(binnum>0) {
			int lastdigit=binnum%10;
			decnum=decnum+(lastdigit*(int)Math.pow(2,pow));
			pow++;
			binnum=binnum/10;
		}
		System.out.println("decimal of "+mynum+"="+decnum);
	}
	public static void main(String args[]) {
		BinToDec(10001);
	}
}
//WRITE A PROGRAM TO CONVERT FROM DECIMAL TO BINARY ;
package javabasics;

public class Javabasics {
	public static void DecToBin(int n) {
		int mynum=n;
		int pow=0;
		int binnum=0;
		while(n>0) {
			int rem=n%2;
			binnum=binnum+(rem*(int)Math.pow(10,pow));
			pow++;
			n=n/2;
		}
		System.out.println("binary form of "+mynum+"="+binnum);
	}
	public static void main(String args[]) {
		DecToBin(15);
	}
}
//WRITE A JAVA METHOD TO COMPLETE THE AVERAGE OF THREE NUMBER;
package javabasics;
import java.util.*;
public class Javabasics {
	public static void main(String args[]) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Input the first number : ");
		double x =sc.nextDouble();
		System.out.println("input the second number : ");
		double y=sc.nextDouble();
		System.out.println("Input the third number : ");
		double z=sc.nextDouble();
		System.out.print("The average value is "+average(x,y,z));
	}
	public static double average (double x, double y, double z) {
		return(x+y+z)/3;
	}
}
//WRITE A JAVA PROGRAM TO CHECK IF A NUMBER IS A PALINDROME IN JAVA;
package javabasics;
import java.util.*;
public class Javabasics {
	public static void main(String args[]) {
		System.out.println("please enter number : ");
		Scanner sc=new Scanner(System.in);
		int palindrome=sc.nextInt();
		if (ispalindrome(palindrome)) {
			System.out.println("number:"+palindrome+"is a palindrome");
		}else {
			System.out.println("number:"+palindrome+"is not a palindrome");
		}
	}	
	public static boolean ispalindrome(int number) {
		int palindrome=number;
		int reverse=0;
		while(palindrome!=0) {
			int remainder=palindrome%10;
			reverse=reverse*10+remainder;
			palindrome=palindrome/10;
		}
		if (number==reverse) {
			return true;
		}
		else {
			return false;
		}
	}
}
//EXAMPLE 1 (JAVA MATH CLASS)
package javabasics;
import java.util.*;
public class Javabasics {
	public static void main(String args[]) {
		double x=28;
		double y=4;
		//return the maximum of two number
		System.out.println("maximum number of x and y is : "+Math.max(x, y));
		
		//return the square root of y
		System.out.println("square root of y is :"+Math.sqrt(y));
		
		//return 28 power of 4 i.e 28*28*28*28
		System.out.println("power of x and y is : "+Math.pow(x, y));
		
		//return the logarithm of given value
		System.out.println("logarithm of x is"+Math.log(x));
		System.out.println("logarithm of y is"+Math.log(y));
		
		//return the logarithm of given value when base is 10
		System.out.println("logarithm of x is"+Math.log10(x));
		System.out.println("logarithm of y is"+Math.log10(y));
		
		//return the log of x+1
		System.out.println("logarithm of x is"+Math.log1p(x));
		
		//return the power of 2
		System.out.println("exp of a :"+Math.exp(x));
		
		//return (a power of 2)-1
		System.out.println("expm1 of a :"+Math.expm1(x));
		
		
		
	}
}
//EXAMPLE 2(JAVA MATH CLASS)
package javabasics;
import java.util.*;
public class Javabasics {
	public static void main(String args[]) {
		double a =30;
		
		//convert values to radian ;
		double b=Math.toRadians(a);
		
		//return the trigonometric sine of a
		System.out.println("sine of a : "+Math.sin(a));
		
		//return the trigonometric arc of sin
		System.out.println("arc of sin is: "+Math.asin(a));
		
		//return the hyperbolic sine of a 
		System.out.println("sine hyperbolic is : "+Math.sinh(a));
	}
}
//PRINT THE HOLLOW RECTANGLE PATTERN
package javabasics;
import java.util.*;
public class Javabasics {
	public static void hollow_rectangle(int totrows,int totcols) {
		for(int i=1; i<=totrows; i++) {
			for(int j=1; j<=totcols; j++) {
				if (i==1||i==totrows||j==1||j==totcols) {
					System.out.print("*");
				}else {
					System.out.print(" ");
				}
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		hollow_rectangle(4,5);
	}
}
//PRINT THE INVERTED & ROTATED HALF PYRAMID 
package javabasics;
import java.util.*;
public class Javabasics {
	public static void inverted_rotated_half_pyramid(int n) {
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=n-i; j++) {
				System.out.print(" ");
			}
			for (int j=1;j<=i; j++) {
				System.out.print("*");
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		inverted_rotated_half_pyramid(4);
	}
}

//PRINT THE INVERTED HALF PYRAMID WITH NUMBERS
package javabasics;
import java.util.*;
public class Javabasics {
	public static void inverted_half_pyramid_with_numbers(int n) {
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=n-i+1; j++) {
				System.out.print(j+" ");
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		inverted_half_pyramid_with_numbers(5);
	}
}
//PRINT THE FLOYD'S TRIANGLE
package javabasics;
import java.util.*;
public class Javabasics {
	public static void floyd_triangle (int n) {
		int counter=1;
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=i; j++) {
				System.out.print(counter+" ");
				counter++;
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		 floyd_triangle (5);
	}
}
//PRINT THE 0-1 TRIANGLE
package javabasics;
import java.util.*;
public class Javabasics {
	public static void zero_one_triangle (int n) {
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=i; j++) {
				if ((i+j)%2==0) {
					System.out.print("1");
				}else {
				System.out.print("0");
				}
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		 zero_one_triangle (5);
	}
}
//PRINT THE BUTTERFLY PATTERN
package javabasics;
import java.util.*;
public class Javabasics {
	public static void butterfly(int n) {
		//ist half
		for(int i=1; i<=n; i++) {
			//star-i
		    for(int j=1; j<=i; j++) {
				System.out.print("*");	
			}
		    //spaces-2*(n-i)
			for(int j=1; j<=2*(n-i); j++) {
		    	System.out.print(" ");
			}
			//star-i
			for(int j=1; j<=i; j++) {
				System.out.print("*");
			}
			System.out.println();
		}
		//2nd half
		for(int i=n; i>=1; i--) {
			//star-i
		    for(int j=1; j<=i; j++) {
				System.out.print("*");	
			}
		    //spaces-2*(n-i)
			for(int j=1; j<=2*(n-i); j++) {
			    System.out.print(" ");
			}
			//star-i
			for(int j=1; j<=i; j++) {
				System.out.print("*");
			}
			System.out.println();
	    }
	}
	public static void main(String args[]) {
		 butterfly(10);
	}
}

//PRINT THE SOLID RHOMBUS
package javabasics;
import java.util.*;
public class Javabasics {
	public static void solid_rhombus(int n) {
		for(int i=1; i<=n; i++) {
		    for(int j=1; j<=n-i; j++) {
				System.out.print(" ");	
		    }
			for(int j=1; j<=n; j++) {
				System.out.print("*");
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		solid_rhombus(10);
	}
}
//PRINT THE HOLLOW RHOMBUS
package javabasics;
import java.util.*;
public class Javabasics {
	public static void hollow_rhombus(int n) {
		for(int i=1; i<=n; i++) {
		    for(int j=1; j<=n-i; j++) {
				System.out.print(" ");	
		    }
			for(int j=1; j<=n; j++) {
				if( i==1||i==n||j==1||j==n) {
				   System.out.print("*");
				}else {
					System.out.print(" ");
				}
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		hollow_rhombus(10);
	}
}
//PRINT THE DIAMOND PATTTERN
package javabasics;
import java.util.*;
public class Javabasics {
	public static void diamond(int n) {
		for(int i=1; i<=n; i++) {
		    for(int j=1; j<=n-i; j++) {
				System.out.print(" ");	
		    }
			for(int j=1; j<=(2*i)-1; j++) {
				  System.out.print("*");
			}
			System.out.println();
		}
		for(int i=n; i>=1; i--) {
			 for(int j=1; j<=n-i; j++) {
					System.out.print(" ");	
			    }
				for(int j=1; j<=(2*i)-1; j++) {
					  System.out.print("*");
				}
				System.out.println();
			
		}
	}
	public static void main(String args[]) {
		diamond(10);
	}
}
//PRINT THE NUMBER PYRAMID
package javabasics;
import java.util.*;
public class Javabasics {
	public static void number_pyramid(int n) {
		for(int i=1; i<=n; i++) {
		    for(int j=1; j<=n-i; j++) {
				System.out.print(" ");	
		    }
			for(int j=1; j<=i; j++) {
				  System.out.print(i+" ");
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		number_pyramid(50);
	}
}
//PRINT THE PALINDROME PATTERN WITH NUMBER
package javabasics;
import java.util.*;
public class Javabasics {
	public static void palindrome_pattern_with_number(int n) {
		for(int i=1; i<=n; i++) {
		    for(int j=1; j<=n-i; j++) {
				System.out.print(" ");	
		    }
		    for(int j=i; j>=1; j--) {
				  System.out.print(j);
		    }
			for(int j=2; j<=i; j++) {
				  System.out.print(j);
			}
			System.out.println();
		}
	}
	public static void main(String args[]) {
		palindrome_pattern_with_number(5);
	}
}

//ARRAYS--INPUT,OUTPUT & UPDATE & percentage
package javabasics;
import java.util.*;
public class array {
	public static void main(String args[]) {
		int marks[]=new int[100];
		Scanner sc =new Scanner(System.in);
		
		marks[0]=sc.nextInt();
		marks[1]=sc.nextInt();
		marks[2]=sc.nextInt();
		
		System.out.println("phy:"+marks[0]);
		System.out.println("chem:"+marks[1]);
		System.out.println("math:"+marks[2]);
		
		marks[2]=100;//update
		System.out.println("math:"+marks[2]);
		
		marks[1]=marks[1]-1;//update
		System.out.println("chem:"+marks[1]);
		
		//percentage
		int percentage=(marks[0]+marks[1]+marks[2])/3;
		System.out.println("percentage : "+percentage+"%");
		
		
	}

}
//ARRAYS--passing arrays as arguments
package javabasics;
import java.util.*;
public class array {
	public static void update(int marks[]) {
		for(int i=0; i<marks.length;i++) {
			marks[i]=marks[i]+1;
		}
	}
	public static void  main(String args[]) {
		int marks[]= {97,95,94};
		update(marks);
		
		for(int i=0; i<marks.length;i++) {
			System.out.print(marks[i]+" ");
		}
		System.out.println();
	}

}
//FIND THE INDEX OF ELEMENTS IN A GIVEN ARRAY (LINEAR SEARCH)
package javabasics;
import java.util.*;
public class array {
	public static int linearsearch(int number[],int key) {
		for(int i=0; i<number.length;i++) {
			if (number[i]==key) {
				return i;
			}
		}
		return -1;
	}
	public static void  main(String args[]) {
		int number[]= {2,4,6,8,10,16,20};
		int key=16;
		int index=linearsearch(number,key);
		if (index==-1) {
			System.out.println("NOT FOUND");
		}else {
			System.out.println("key is at index:"+index);
		}
	}

}
//FIND THE LARGEST AND SMALLEST NUMBER IN GIVEN ARRAY
package javabasics;
import java.util.*;
public class array {
	public static int getlargest(int number[]) {
		int largest=Integer.MIN_VALUE;
		int smallest=Integer.MAX_VALUE;
		
		for(int i=0; i<number.length;i++) {
			if (largest<number[i]) {
				largest=number[i];
			}
			if(smallest>number[i]) {
				smallest=number[i];
			}
		}
		System.out.println("samllest value is: "+smallest);
		return largest;
	}
	public static void  main(String args[]) {
		int number[]= {1,2,6,8,5,4};
			System.out.println("largest value is : "+getlargest(number));
	}

}
//FIND THE BINARY SEARCH
package javabasics;
import java.util.*;
public class array {
	public static int binarysearch(int numbers[],int key) {
		int start=0,end=numbers.length-1;
		while(start<=end) {
			int mid=(start+end)/2;
			if(numbers[mid]==key) {
				return mid;
			}
			if(numbers[mid]<key) {
				start=mid+1;
			}
			else {
				end=mid-1;
			}
		}
		return -1;
	}
	public static void  main(String args[]) {
		int numbers[]= {2,5,4,6,8,10,12,14};
		int key=5;
		System.out.println("index for key is:"+binarysearch(numbers,key));
	}

}
//PRINT REVERSE AN ARRAY
package javabasics;
import java.util.*;
public class array {
	public static void reverse(int numbers[]) {
		int first=0,last=numbers.length-1;
		while(first<last) {
			int temp=numbers[last];
			numbers[last]=numbers[first];
			numbers[first]=temp;
			
			first++;
			last--;
		}
	}
	public static void  main(String args[]) {
		int numbers[]= {2,5,4,6,8,10,12,14};
		reverse(numbers);
		for(int i=0;i<numbers.length;i++) {
			System.out.print(numbers[i]+" ");
		}
		System.out.println();
	}
}
//PRINT PAIRS IN AN ARRAY AND TOTAL NUMBER OF PAIRS
package javabasics;
import java.util.*;
public class array {
	public static void printpairs(int numbers[]) {
		int tp=0;
		for(int i=0;i<numbers.length;i++) {
			int current=numbers[i];
			for(int j=i+1; j<numbers.length; j++) {
				System.out.println("("+current+","+numbers[j]+")");
				tp++;
			}
			System.out.println();
		}
		System.out.println("total pairs = "+tp);
	}
	public static void  main(String args[]) {
		int numbers[]= {2,5,4,6,8,10,12,14};
		printpairs(numbers);
	}
}
//PRINT SUBARRAYS;
package javabasics;
import java.util.*;
public class array {
	public static void printsubarrays(int numbers[]) {
		int ts=0;
		for(int i=0;i<numbers.length;i++) {
			int start=i;
			for(int j=i; j<numbers.length; j++) {
				int end=j;
				for(int k=start; k<=end; k++) {
					System.out.print(numbers[k]+" ");
				}
				ts++;
				System.out.println();
			}
			System.out.println();
		}
		System.out.println("total subarrays = "+ts);
	}
	public static void  main(String args[]) {
		int numbers[]= {2,5,4,6,8,10,12,14};
		printsubarrays(numbers);
	}
}
//PRINT MAX SUBARRAY SUM-I (BRUTE FORCE)
package javabasics;
import java.util.*;
public class array {
	public static void maxsubarraysum(int numbers[]) {
		int currsum=0;
		int maxsum=Integer.MIN_VALUE;
		for(int i=0;i<numbers.length;i++) {
			int start=i;
			for(int j=i; j<numbers.length; j++) {
				int end=j;
				currsum=0;
				for(int k=start; k<=end; k++) {
					currsum+=numbers[k];
				}
				System.out.println(currsum);
				if(maxsum<currsum) {
					maxsum=currsum;
				}
			}
		}
		System.out.println("max sum = "+maxsum);
	}
	public static void  main(String args[]) {
		int numbers[]= {1,-2,6,-1,3};
		maxsubarraysum(numbers);
	}
}

//PRINT MAX SUBARRAY SUM-III (KADANE'S ALGORITHM)
package javabasics;
import java.util.*;
public class array {
	public static void kadanes(int numbers[]) {
		int currsum=0;
		int maxsum=Integer.MIN_VALUE;
		
		for(int i=0;i<numbers.length;i++) {
			currsum+=numbers[i];
			if(currsum<0) {
				currsum=0;
			}
			maxsum=Math.max(currsum, maxsum);
		}
		System.out.println("max sum = "+maxsum);
	}
	public static void  main(String args[]) {
		int numbers[]= {1,-2,6,-1,3};
		kadanes(numbers);
	}
}
//TRAPPING RAINWATER
package javabasics;
import java.util.*;
public class array {
	public static int trappedrainwater (int height[]) {
		int n=height.length;
		int leftmax[]=new int[n];
		leftmax[0]=height[0];
		for(int i=1; i<n; i++) {
			leftmax[i]=Math.max(height[i], leftmax[i-1]);
		}
		int rightmax[]=new int[n];
		rightmax[n-1]=height[n-1];
		for(int i=n-2; i>=0;i--) {
			rightmax[i]=Math.max(height[i],rightmax[i+1]);
		}
		int trappedwater=0;
		for(int i=0; i<n; i++) {
			int waterlevel=Math.min(leftmax[i],rightmax[i]);
			trappedwater+=waterlevel-height[i];
		}
		return trappedwater;
	}
	public static void  main(String args[]) {
		int height[]= {4,2,0,6,3,2,5,5};
        System.out.println(trappedrainwater(height));
	}
}
//BUY & SELL STOCKS
package javabasics;
import java.util.*;
public class array {
	public static int buyandsellstocks (int prices[]) {
		int buyprice=Integer.MAX_VALUE;
		int maxprofit=0;
		
		for (int i=0; i<prices.length; i++) {
			if(buyprice<prices[i]) {
				int profit =prices[i]-buyprice;
				maxprofit=Math.max(maxprofit,profit);
			}
			else {
				buyprice=prices[i];
			}
		}
		return maxprofit;
	}
	public static void  main(String args[]) {
		int prices[]= {4,2,0,6,3,2,5,5};
        System.out.println(buyandsellstocks(prices));
	}
}

//GIVEN AN INTEGER ARRAY NUMS, RETURN TRUE IF ANY VALUE APPEARS AT LEAST TWICE IND RETURN FALSE IF ANY ELEMENT IS DISTINCT
package javabasic;
import java.util.*;
public class java {
	public boolean containsduplicate(int nums[]){
		for (int i=0; i<nums.length-1; i++) {
			for (int j=i+1;j<nums.length; j++) {
				if(nums[i]==nums[j]) {
					return true;
				}
			}
		}
		return false;
	}
	
}
		
//BUBBLE SORTING
package javabasic;
import java.util.*;
public class java {
	public static void bubblesort(int arr[]) {
		for (int turn=0; turn<arr.length-1; turn++) {
			for(int j=0; j<=arr.length-2-turn; j++) {
				if (arr[j]>arr[j+1]) {
					//swap
					int temp=arr[j];
					arr[j]=arr[j+1];
					arr[j+1]=temp;
				}
			}
		}
	}
	public static void printArr(int arr[]) {
		for (int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
	}
	public static void main(String args[]) {
		int arr[]= {5,4,1,3,2};
		bubblesort(arr);
		printArr(arr);
	}	
}
//SELECTION SORTING
package javabasic;
import java.util.*;
public class java {
	public static void selectionsort(int arr[]) {
		for (int turn=0; turn<arr.length-1; turn++) {
			int minposition=turn;
			for(int j=turn+1; j<arr.length; j++) {
				if (arr[minposition]>arr[j]) {
					//swap
					int temp=arr[minposition];
					arr[minposition]=arr[j];
					arr[j]=temp;
				}
			}
		}
	}
	public static void printArr(int arr[]) {
		for (int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
	}
	public static void main(String args[]) {
		int arr[]= {5,4,1,3,2};
		selectionsort(arr);
		printArr(arr);
	}	
}
//INSERTION SORTING
package javabasic;
import java.util.*;
public class java {
	public static void insertionsort(int arr[]) {
		for (int i=1; i<arr.length; i++) {
			int curr =arr[i];
			int prev =i-1;
			//finding out the correct position to insert
			while(prev>=0 && arr[prev]>curr) {
				arr[prev+1]=arr[prev];
				prev--;
			}
			arr[prev+1]=curr;
		}
	}
	public static void printArr(int arr[]) {
		for (int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
	}
	public static void main(String args[]) {
		int arr[]= {5,4,1,3,2};
		insertionsort(arr);
		printArr(arr);
	}	
}
//COUNTING SORTING
package javabasic;
import java.util.*;
public class java {
	public static void countingsort(int arr[]) {
		int largest=Integer.MIN_VALUE;
		for (int i=0; i<arr.length; i++) {
			largest =Math.max(largest, arr[i]);
		}
		int count[]=new int[largest+1];
		for (int i=0; i<arr.length; i++) {
			count[arr[i]]++;
		}
		//sorting
		int j=0;
		for (int i=0; i<count.length; i++) {
			while(count[i]>0) {
				arr[j]=i;
				j++;
				count[i]--;
			}
		}
	}
	public static void printArr(int arr[]) {
		for (int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
	}
	public static void main(String args[]) {
		int arr[]= {5,4,1,1,3,2,3,2};
		countingsort(arr);
		printArr(arr);
	}	
}
//INBUILT FUNCTION
//EXAMPLE--1;
package javabasic;
import java.util.Arrays;
public class java {
	public static void main(String args[]) {
		int arr[]= {5,4,1,3,2};
		Arrays.sort(arr);
		System.out.println("modified arr[] :"+Arrays.toString(arr));
	}	
}
//INBUILT FUNCTION
//EXAMPLE--2
package javabasic;
import java.util.Arrays;
public class java {
	public static void main(String args[]) {
		int arr[]= {5,4,1,3,2};
		Arrays.sort(arr,0,3);
		System.out.println("modified arr[] :"+Arrays.toString(arr));
	}	
}
//INBUILT FUNCTION
//EXAMPLE--3
package javabasic;
import java.util.Arrays;
import java.util.Collections;
public class java {
	public static void main(String args[]) {
		Integer array[]= {5,4,1,3,2};
		Arrays.sort(array,Collections.reverseOrder());
		System.out.println("modified arr[] :"+Arrays.toString(array));
	}	
}
//INBUILT FUNCTION
//EXAMPLE--4
package javabasic;
import java.util.Arrays;
import java.util.Collections;
public class java {
	public static void main(String args[]) {
		Integer array[]= {5,4,1,3,2};
		Arrays.sort(array,0,3,Collections.reverseOrder());
		System.out.println("modified arr[] :"+Arrays.toString(array));
	}	
}
//CREATION OF 2D ARRAYS:
package javabasic;
import java.util.*;

public class arrays {
	//for search matrix
	public static boolean search (int matrix[][],int key){
		for(int i=0; i<matrix.length; i++) {
			for(int j=0; j<matrix[0].length; j++) {
				if(matrix[i][j]==key) {
					System.out.println("found at cell ("+i+","+j+")");
					return true;
				}
			}
		}
		System.out.println("key not found");
		return false; 
    }		
	//create a matrix
	public static void main(String args[]) {
		int matrix[][]=new int[3][3];
		int n=matrix.length, m=matrix[0].length;
		
		Scanner sc = new Scanner(System.in);
		for(int i=0; i<n; i++) {
			for(int j=0; j<m;j++) {
				matrix[i][j]=sc.nextInt();
			}
		}
		//output
		for(int i=0; i<n; i++) {
			for(int j=0; j<m;j++) {
				System.out.print(matrix[i][j]+" ");
			}
			System.out.println();
		}
		search(matrix,5);
	}
}
//SPIRAL MATRIX
package javabasic;
import java.util.*;

public class arrays {
	public static void printspiral (int matrix[][]) {
		int startrow = 0;
		int startcol = 0;
		int endrow = matrix.length-1;
		int endcol = matrix[0].length-1;
		
		while(startrow<=endrow && startcol<=endcol) {
			//top
			for(int j=startcol; j<=endcol; j++) {
				System.out.print(matrix[startrow][j]+" ");
			}
			//right
			for(int i=startrow+1; i<=endrow; i++) {
				System.out.print(matrix[i][endcol]+" ");
			}
			//bottom
			for(int j=endcol-1; j>=startcol; j--) {
				System.out.print(matrix[endrow][j]+" ");
			}
			//left
			for(int i=endrow-1; i>=startrow+1; i--) {
				if(startcol==endcol) {
					break;
				}
				System.out.print(matrix[i][startcol] +" ");
			}
			startcol++;
		    startrow++;
			endcol--;
		    endrow--;
		}
		System.out.println();
	}
	public static void main(String args[]) {
		int matrix[][]= {{1,2,3},{5,6,7},{9,10,11}};
		printspiral(matrix);
	}
}		
//DIAGONAL SUM (T.C is O(n^2))
package javabasic;
import java.util.*;

public class arrays {
	public static int diagonalsum (int matrix[][]) {
		int sum = 0;
		for(int i=0; i<matrix.length; i++) {
			for(int j=0; j<matrix[0].length; j++) {
				//primary diagonal:
				if(i == j) {
					sum += matrix[i][j];
				}
				//seconday diagonal:
				else if(i+j == matrix.length-1) {
					sum += matrix[i][j];
				}
			}
		}
		return sum;
	}
		
	public static void main(String args[]) {
		int matrix[][]= {{1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,15,16}};
		System.out.println(diagonalsum(matrix));
	}
}		
//DIAGONAL SUM (T.C is O(n))
package javabasic;
import java.util.*;

public class arrays {
	public static int diagonalsum (int matrix[][]) {
		int sum = 0;
		for(int i=0; i<matrix.length; i++) {
			//primary diagonal;
			sum+=matrix[i][i];
			//secondary diagonal
			if(i!=matrix.length-1-i) {
				sum+=matrix[i][matrix.length-i-1];
			}
		}
		return sum;
	}
		
	public static void main(String args[]) {
		int matrix[][]= {{1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,15,16}};
		System.out.println(diagonalsum(matrix));
	}
}
//KEY SEARCH IN SORTED MATRIX
package javabasic;
import java.util.*;

public class arrays {
	public static boolean staircasesearch (int matrix[][],int key) {
		int row=0,col=matrix[0].length-1;
		
		while(row<matrix.length && col>=0) {
			if(matrix[row][col]==key) {
				System.out.println("found key at ("+row+","+col+")");
				return true;
			}
			else if(key<matrix[row][col]) {
				col--;
			}
			else {
				row++;
			}
		}
		System.out.println("key not found");
		return false;
	}
		
	public static void main(String args[]) {
		int matrix[][]= {{1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,15,16}};
		int key=8;
        staircasesearch(matrix,key);
	}
}		

//PRINT THE NUMBER OF 7'S THAT ARE IN THE 2D ARRAY
package javabasic;
import java.util.*;

public class arrays {
	public static void main (String args[]) {
		int array[][]= {{4,7,8},{8,8,7}};
		int countof7=0;
		for(int i=0; i<array.length; i++) {
			for(int j=0; j<array[0].length; j++){
				if(array[i][j]==7){
					countof7++;
				}
			}
		}
		System.out.println("count of 7 is:"+countof7);
	}
}
//PRINT THE SUM OF THE NUMBERS IN THE SECOND ROW IN GIVEN ARRAY:
package javabasic;
import java.util.*;

public class arrays {
	public static void main (String args[]) {
		int array[][]= {{4,7,8},{8,8,7}};
		int sum=0;
		//sum of second row:
		for(int j=0; j<array[0].length; j++) {
			sum+=array[1][j];
		}
		System.out.println("sum of 2nd row is:"+sum);
	}
}
//WRITE A PROGRAM TO FIND TRANSPOSE OF A MATRIX:
package javabasic;
import java.util.*;

public class arrays {
	public static void main (String args[]) {
		int row=2,column=3;
		int matrix[][]= {{2,3,7},{5,6,7}};
		
		//Display original matrix:
		printmatrix(matrix);
		
		//Transpose the matrix:
		int transpose[][]=new int[column][row];
		for(int i=0; i<row; i++) {
			for(int j=0; j<column; j++) {
				transpose[j][i]=matrix[i][j];
			}
		}
		//print the tanspose matrix:
		printmatrix(transpose);
	}
	public static void printmatrix(int matrix[][]) {
		System.out.println("The matrix is : ");
		for(int i=0; i<matrix.length; i++) {
			for(int j=0; j<matrix[0].length; j++) {
			System.out.print(matrix[i][j]+" ");
		    }
		    System.out.println();
		}
	}
}		
		
		


		
		
		
		


		
		
		


		
		
		


		
		
		


		
		
		


		
		


		
		
		


		
		
		


		
		
		


		
		
		
		


	
		
		
		


		
		
		
		



